{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "start http-server",
      "type": "shell",
      "isBackground": true,
      "command": "http-server",
      "args": [
        "--port",
        "44300",
        "-a",
        "localhost",
        "--tls",
        "--cert",
        "'C:\\Users\\idmoi_000\\.mkcert\\127.0.0.1+1.pem'",
        "--key",
        "'C:\\Users\\idmoi_000\\.mkcert\\127.0.0.1+1-key.pem'"
      ],
      "presentation": {
        "reveal": "silent"
      },
      "problemMatcher": [
        {
          "pattern": [
            {
              "regexp": ".",
              "file": 1,
              "line": 1,
              "column": 1,
              "message": 1
            }
          ],
          "background": {
            "activeOnStart": true,
            "beginsPattern": {
              "regexp": "."
            },
            "endsPattern": {
              "regexp": "."
            }
          }
        }
      ]
    },
    {
      "label": "stop http-server",
      "type": "shell",
      "command": "echo ${input:terminate}"
    },
    {
      "label": "start live-server",
      "type": "shell",
      "isBackground": true,
      "command": "live-server",
      "args": [
        "--host=localhost",
        "--port=44300",
        "--no-browser",
        "--https=\"C:\\Users\\idmoi_000\\AppData\\Local\\liveServer\\live-serve-config.js\""
      ],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [
        {
          "pattern": [
            {
              "regexp": ".",
              "file": 1,
              "line": 1,
              "column": 1,
              "message": 1
            }
          ],
          "background": {
            "activeOnStart": true,
            "beginsPattern": {
              "regexp": "."
            },
            "endsPattern": {
              "regexp": "."
            }
          }
        }
      ]
    },
    {
      "label": "stop live-server",
      "command": "echo ${input:terminate}",
      "type": "shell"
    },
    {
      "label": "SASS: compile .\\css\\style.scss",
      "type": "shell",
      "command": "sass",
      "args": [
        "--watch",
        "--no-source-map",
        ".\\css\\style.scss",
        ".\\css\\style.scss.css"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "SASS: compile current SASS file.",
      "type": "shell",
      "command": "sass",
      "args": ["--watch", "${file}", "${file}.css"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "SASS: choose a SASS file to compile.",
      "type": "shell",
      "command": "sass",
      "args": ["--watch", "${input:pickFile}", "${input:pickFile}.css"],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": []
    },
    {
      "label": "Dev Concurrently",
      "type": "npm",
      "script": "dev",
      "presentation": {
        "clear": true,
        "reveal": "silent",
        "showReuseMessage": true
      },
      "problemMatcher": []
    },
    {
      "label": "Terminate All Tasks",
      "type": "shell",
      "command": "echo ${input:terminate}",
      "problemMatcher": []
    },
    {
      "label": "echo variable",
      "type": "shell",
      "command": "echo = 'echo Variable: ${workspaceFolder}' =",
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      // For file server
      "id": "terminate",
      "type": "command",
      "command": "workbench.action.tasks.terminate",
      "args": "terminateAll"
    },
    {
      // For sass compiler
      "id": "pickFile",
      "type": "pickString",
      "description": "What type of component do you want to create?",
      "options": [
        ".\\css\\main.scss",
        ".\\css\\main\\header\\headerMenu.scss",
        "${file}",
        "pipe",
        "service"
      ],
      "default": ".\\css\\main.scss"
    },
    {
      // For sass compiler
      "id": "outputFile",
      "type": "promptString",
      "description": "Output file.",
      "default": "${file}"
    }
  ]
}
